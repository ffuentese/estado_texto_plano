<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <link rel="alternate" type="text/html" href="https://estado.texto-plano.xyz/"/>
    <title>Pages on Estado operacional de Texto-Plano</title>
    <link>https://estado.texto-plano.xyz/pages/</link>
    <description>Historial de incidentes</description>
    <generator>github.com/cstate</generator>
    <language>es</language>
    
    
    
      <atom:link href="https://estado.texto-plano.xyz/pages/index.xml" rel="self" type="application/rss+xml" />
    
    
      <item>
        <title></title>
        <link>https://estado.texto-plano.xyz/pages/alertas/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <guid>https://estado.texto-plano.xyz/pages/alertas/</guid>
        <category></category>
        <description>&lt;html&gt; 
&lt;style&gt;
#rev
{
    display:none;
    visibility:hidden;
}
&lt;/style&gt;
&lt;body&gt;
&lt;h1&gt;Alertas&lt;/h1&gt;
&lt;p&gt;Si detectas que algún servicio de Texto-Plano no esta funcionando, avisanos:&lt;/p&gt;

&lt;form id=&#34;myForm&#34; name=&#34;contact&#34; method=&#34;POST&#34; action=&#34;https://estado.texto-plano.xyz/thankyou.html&#34;&gt;
  &lt;p&gt;
    &lt;label&gt;Tu usuario: &lt;input type=&#34;text&#34; name=&#34;user&#34; v-model=&#34;user&#34; /&gt;&lt;/label&gt;
  &lt;/p&gt;
  &lt;p&gt;
    &lt;label&gt;¿Qué servicios no están funcionando?:&lt;/p&gt;
&lt;p&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;servidor&#34; name=&#34;servidor&#34; value=&#34;servidor-inaccesible&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;jabber&#34;&gt; Servidor inaccesible&lt;/label&gt;&lt;br&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;jabber&#34; name=&#34;jabber&#34; value=&#34;prosody&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;jabber&#34;&gt; Servidor Jabber&lt;/label&gt;&lt;br&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;web&#34; name=&#34;web&#34; value=&#34;nginx&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;web&#34;&gt; Servidor Web &lt;/label&gt;&lt;br&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;wiki&#34; name=&#34;wiki&#34; value=&#34;wiki&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;wiki&#34;&gt; Wiki &lt;/label&gt;&lt;br&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;gemini&#34; name=&#34;gemini&#34; value=&#34;gemini&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;gemini&#34;&gt; Servidor Gemini &lt;/label&gt;&lt;br&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;gopher&#34; name=&#34;gopher&#34; value=&#34;gophernicus&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;gopher&#34;&gt; Servidor Gopher &lt;/label&gt;&lt;br&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;bbj&#34; name=&#34;bbj&#34; value=&#34;bbj&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;bbj&#34;&gt; BBJ&lt;/label&gt;&lt;br&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;radio&#34; name=&#34;radio&#34; value=&#34;icecast&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;bbj&#34;&gt; Radio &lt;/label&gt;&lt;br&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;mumble&#34; name=&#34;mumble&#34; value=&#34;murmurd&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;mumble&#34;&gt; Servidor Mumble (conversación por audio)&lt;/label&gt;&lt;br&gt;
&lt;br&gt;
  &lt;/p&gt;
&lt;p&gt; &lt;input type=&#34;text&#34; id=&#34;rev&#34; name=&#34;rev&#34;  v-model=&#34;rev&#34;&gt;&lt;/p&gt;
  &lt;p&gt;
    &lt;button type=&#34;submit&#34;  @click.prevent=&#34;checkForm&#34;&gt;Enviar&lt;/button&gt;
  &lt;/p&gt;
&lt;/form&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&#34;&gt;&lt;/script&gt;
&lt;script&gt;
const app = new Vue({
    el:&#39;#myForm&#39;,
    data:{
        user:&#39;&#39;,
        checkedNames:[],
	rev:&#39;&#39;
    },
    methods:{
	checkForm:function() {
		if (this.rev === &#34;&#34; &amp;&amp; this.user !== &#34;&#34;) { this.sendForm(); }
	},
        async sendForm() {  
            let messageBody = this.user + &#34; indica que los siguientes servicios de texto-plano no funcionan: &#34; + this.checkedNames;
             
            let resp = await fetch(&#39;https://ntfy.sh/alertas_tp&#39;, {
                method:&#39;POST&#39;,
headers: {
        &#39;Title&#39;: &#39;Incidencia en texto-plano.xyz&#39;
    },
                body:messageBody
            });
            // assume ok, although double check
            alert(&#39;Enviado!&#39;);
        }
    }
});
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</description>
        <content type="html">&lt;html&gt; 
&lt;style&gt;
#rev
{
    display:none;
    visibility:hidden;
}
&lt;/style&gt;
&lt;body&gt;
&lt;h1&gt;Alertas&lt;/h1&gt;
&lt;p&gt;Si detectas que algún servicio de Texto-Plano no esta funcionando, avisanos:&lt;/p&gt;

&lt;form id=&#34;myForm&#34; name=&#34;contact&#34; method=&#34;POST&#34; action=&#34;https://estado.texto-plano.xyz/thankyou.html&#34;&gt;
  &lt;p&gt;
    &lt;label&gt;Tu usuario: &lt;input type=&#34;text&#34; name=&#34;user&#34; v-model=&#34;user&#34; /&gt;&lt;/label&gt;
  &lt;/p&gt;
  &lt;p&gt;
    &lt;label&gt;¿Qué servicios no están funcionando?:&lt;/p&gt;
&lt;p&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;servidor&#34; name=&#34;servidor&#34; value=&#34;servidor-inaccesible&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;jabber&#34;&gt; Servidor inaccesible&lt;/label&gt;&lt;br&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;jabber&#34; name=&#34;jabber&#34; value=&#34;prosody&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;jabber&#34;&gt; Servidor Jabber&lt;/label&gt;&lt;br&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;web&#34; name=&#34;web&#34; value=&#34;nginx&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;web&#34;&gt; Servidor Web &lt;/label&gt;&lt;br&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;wiki&#34; name=&#34;wiki&#34; value=&#34;wiki&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;wiki&#34;&gt; Wiki &lt;/label&gt;&lt;br&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;gemini&#34; name=&#34;gemini&#34; value=&#34;gemini&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;gemini&#34;&gt; Servidor Gemini &lt;/label&gt;&lt;br&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;gopher&#34; name=&#34;gopher&#34; value=&#34;gophernicus&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;gopher&#34;&gt; Servidor Gopher &lt;/label&gt;&lt;br&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;bbj&#34; name=&#34;bbj&#34; value=&#34;bbj&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;bbj&#34;&gt; BBJ&lt;/label&gt;&lt;br&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;radio&#34; name=&#34;radio&#34; value=&#34;icecast&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;bbj&#34;&gt; Radio &lt;/label&gt;&lt;br&gt;
 &lt;input type=&#34;checkbox&#34; id=&#34;mumble&#34; name=&#34;mumble&#34; value=&#34;murmurd&#34; v-model=&#34;checkedNames&#34;&gt;
&lt;label for=&#34;mumble&#34;&gt; Servidor Mumble (conversación por audio)&lt;/label&gt;&lt;br&gt;
&lt;br&gt;
  &lt;/p&gt;
&lt;p&gt; &lt;input type=&#34;text&#34; id=&#34;rev&#34; name=&#34;rev&#34;  v-model=&#34;rev&#34;&gt;&lt;/p&gt;
  &lt;p&gt;
    &lt;button type=&#34;submit&#34;  @click.prevent=&#34;checkForm&#34;&gt;Enviar&lt;/button&gt;
  &lt;/p&gt;
&lt;/form&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&#34;&gt;&lt;/script&gt;
&lt;script&gt;
const app = new Vue({
    el:&#39;#myForm&#39;,
    data:{
        user:&#39;&#39;,
        checkedNames:[],
	rev:&#39;&#39;
    },
    methods:{
	checkForm:function() {
		if (this.rev === &#34;&#34; &amp;&amp; this.user !== &#34;&#34;) { this.sendForm(); }
	},
        async sendForm() {  
            let messageBody = this.user + &#34; indica que los siguientes servicios de texto-plano no funcionan: &#34; + this.checkedNames;
             
            let resp = await fetch(&#39;https://ntfy.sh/alertas_tp&#39;, {
                method:&#39;POST&#39;,
headers: {
        &#39;Title&#39;: &#39;Incidencia en texto-plano.xyz&#39;
    },
                body:messageBody
            });
            // assume ok, although double check
            alert(&#39;Enviado!&#39;);
        }
    }
});
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
      </item>
    
      <item>
        <title>Example Page</title>
        <link>https://estado.texto-plano.xyz/pages/example-page/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <guid>https://estado.texto-plano.xyz/pages/example-page/</guid>
        <category></category>
        <description>&lt;h1 id=&#34;title-here&#34;&gt;Title here!&lt;/h1&gt;
&lt;p&gt;This is an example page that demonstrates the capabilities of a Markdown page in cState.&lt;/p&gt;
&lt;p&gt;You can use HTML if the file extension is &lt;code&gt;.html&lt;/code&gt;, but this one is &lt;code&gt;.md&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Let us dive in.&lt;/p&gt;
&lt;p&gt;Paragraphs are separated by a blank line.&lt;/p&gt;
&lt;p&gt;2nd paragraph. &lt;em&gt;Italic&lt;/em&gt;, &lt;strong&gt;bold&lt;/strong&gt;, and &lt;code&gt;monospace&lt;/code&gt;. Itemized lists
look like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;this one&lt;/li&gt;
&lt;li&gt;that one&lt;/li&gt;
&lt;li&gt;the other one&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that &amp;mdash; not considering the asterisk &amp;mdash; the actual text
content starts at 4-columns in.&lt;/p&gt;</description>
        <content type="html">&lt;h1 id=&#34;title-here&#34;&gt;Title here!&lt;/h1&gt;
&lt;p&gt;This is an example page that demonstrates the capabilities of a Markdown page in cState.&lt;/p&gt;
&lt;p&gt;You can use HTML if the file extension is &lt;code&gt;.html&lt;/code&gt;, but this one is &lt;code&gt;.md&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Let us dive in.&lt;/p&gt;
&lt;p&gt;Paragraphs are separated by a blank line.&lt;/p&gt;
&lt;p&gt;2nd paragraph. &lt;em&gt;Italic&lt;/em&gt;, &lt;strong&gt;bold&lt;/strong&gt;, and &lt;code&gt;monospace&lt;/code&gt;. Itemized lists
look like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;this one&lt;/li&gt;
&lt;li&gt;that one&lt;/li&gt;
&lt;li&gt;the other one&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that &amp;mdash; not considering the asterisk &amp;mdash; the actual text
content starts at 4-columns in.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Block quotes are
written like so.&lt;/p&gt;
&lt;p&gt;They can span multiple paragraphs,
if you like.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., &amp;ldquo;it&amp;rsquo;s all
in chapters 12&amp;ndash;14&amp;rdquo;). Three dots &amp;hellip; will be converted to an ellipsis.
Unicode is supported. ☺&lt;/p&gt;
&lt;h2 id=&#34;an-h2-header&#34;&gt;An h2 header&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s a numbered list:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;first item&lt;/li&gt;
&lt;li&gt;second item&lt;/li&gt;
&lt;li&gt;third item&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Note again how the actual text starts at 4 columns in (4 characters
from the left side). Here&amp;rsquo;s a code sample:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Let me re-iterate ...
for i in 1 .. 10 { do-something(i) }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you probably guessed, indented 4 spaces. By the way, instead of
indenting the block, you can use delimited blocks, if you like:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;define foobar() {
    print &amp;#34;Welcome to flavor country!&amp;#34;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(which makes copying &amp;amp; pasting easier). You can optionally mark the
delimited block for Pandoc to syntax highlight it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Quick, count to ten!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# (but not *too* quick)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(i)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;an-h3-header&#34;&gt;An h3 header&lt;/h3&gt;
&lt;p&gt;Now a nested list:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;First, get these ingredients:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;carrots&lt;/li&gt;
&lt;li&gt;celery&lt;/li&gt;
&lt;li&gt;lentils&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Boil some water.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dump everything in the pot and follow
this algorithm:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;find wooden spoon
uncover pot
stir
cover pot
balance wooden spoon precariously on pot handle
wait 10 minutes
goto first step (or shut off burner when done)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Do not bump wooden spoon or it will fall.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Notice again how text always lines up on 4-space indents (including
that last line which continues item 3 above).&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a link to &lt;a href=&#34;http://foo.bar&#34;&gt;a website&lt;/a&gt;, to a &lt;a href=&#34;local-doc.html&#34;&gt;local
doc&lt;/a&gt;, and to a &lt;a href=&#34;#an-h2-header&#34;&gt;section heading in the current
doc&lt;/a&gt;. Here&amp;rsquo;s a footnote &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Tables can look like this:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Name           Size  Material      Color&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;All Business      9  leather       brown&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Roundabout       10  hemp canvas   natural&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Cinderella       11  glass         transparent&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Table: Shoes sizes, materials, and colors.&lt;/p&gt;
&lt;p&gt;(The above is the caption for the table.) Pandoc also supports
multi-line tables:&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Keyword   Text&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;red       Sunsets, apples, and
other red or reddish
things.&lt;/p&gt;
&lt;p&gt;green     Leaves, grass, frogs
and other things it&amp;rsquo;s
not easy being.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A horizontal rule follows.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Here&amp;rsquo;s a definition list:&lt;/p&gt;
&lt;p&gt;apples&lt;br&gt;
: Good for making applesauce.&lt;/p&gt;
&lt;p&gt;oranges&lt;br&gt;
: Citrus!&lt;/p&gt;
&lt;p&gt;tomatoes&lt;br&gt;
: There&amp;rsquo;s no &amp;ldquo;e&amp;rdquo; in tomatoe.&lt;/p&gt;
&lt;p&gt;Again, text is indented 4 spaces. (Put a blank line between each
term and  its definition to spread things out more.)&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a &amp;ldquo;line block&amp;rdquo; (note how whitespace is honored):&lt;/p&gt;
&lt;p&gt;| Line one
|   Line too
| Line tree&lt;/p&gt;
&lt;p&gt;and images can be specified like so:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://via.placeholder.com/350x150&#34; alt=&#34;example image&#34; title=&#34;An exemplary image&#34;&gt;&lt;/p&gt;
&lt;p&gt;Inline math equation: $\omega = d\phi / dt$. Display
math should get its own line like so:&lt;/p&gt;
&lt;p&gt;$$I = \int \rho R^{2} dV$$&lt;/p&gt;
&lt;p&gt;And note that you can backslash-escape any punctuation characters
which you wish to be displayed literally, ex.: `foo`, *bar*, etc.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Some footnote text.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
      </item>
    
  </channel>
</rss>
